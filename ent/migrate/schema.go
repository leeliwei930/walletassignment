// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LedgersColumns holds the columns for the "ledgers" table.
	LedgersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "amount", Type: field.TypeInt},
		{Name: "description", Type: field.TypeString},
		{Name: "recipient_reference_note", Type: field.TypeString, Nullable: true},
		{Name: "transaction_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "wallet_id", Type: field.TypeUUID},
	}
	// LedgersTable holds the schema information for the "ledgers" table.
	LedgersTable = &schema.Table{
		Name:       "ledgers",
		Columns:    LedgersColumns,
		PrimaryKey: []*schema.Column{LedgersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ledgers_wallets_ledgers",
				Columns:    []*schema.Column{LedgersColumns[7]},
				RefColumns: []*schema.Column{WalletsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ledger_wallet_id_transaction_type",
				Unique:  false,
				Columns: []*schema.Column{LedgersColumns[7], LedgersColumns[4]},
			},
			{
				Name:    "ledger_wallet_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{LedgersColumns[7], LedgersColumns[5]},
			},
			{
				Name:    "ledger_transaction_type",
				Unique:  false,
				Columns: []*schema.Column{LedgersColumns[4]},
			},
			{
				Name:    "ledger_created_at",
				Unique:  false,
				Columns: []*schema.Column{LedgersColumns[5]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_phone_number",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3]},
			},
		},
	}
	// WalletsColumns holds the columns for the "wallets" table.
	WalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "balance", Type: field.TypeInt, Default: 0},
		{Name: "currency_code", Type: field.TypeString, Default: "USD"},
		{Name: "decimal_places", Type: field.TypeInt, Default: 2},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// WalletsTable holds the schema information for the "wallets" table.
	WalletsTable = &schema.Table{
		Name:       "wallets",
		Columns:    WalletsColumns,
		PrimaryKey: []*schema.Column{WalletsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "wallets_users_wallets",
				Columns:    []*schema.Column{WalletsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "wallet_user_id",
				Unique:  false,
				Columns: []*schema.Column{WalletsColumns[6]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LedgersTable,
		UsersTable,
		WalletsTable,
	}
)

func init() {
	LedgersTable.ForeignKeys[0].RefTable = WalletsTable
	WalletsTable.ForeignKeys[0].RefTable = UsersTable
}
